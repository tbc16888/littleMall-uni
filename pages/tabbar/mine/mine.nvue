<template>
	<view>
		<view class="tbc-page-background"></view>

		<!-- #ifdef APP-NVUE || H5 -->
		<view style="position: fixed;top: 0;z-index:9999">
			<view class="tbc-flex-col" style="flex-direction: column;width: 750rpx;" ref="nav"
				:style="navBackgroundColor">
				<view :style="'height:' + statusBarHeight + 'px'"></view>
				<view class="tbc-flex-row"
					style="flex-direction: row;align-items: center;justify-content: flex-end;padding-right: 30rpx;height: 90rpx;">
					<view class="tbc-flex-row" style="width:44rpx;height:44rpx;margin-right: 40rpx;">
						<image src="/static/mine/setting.png" style="width:44rpx;height: 44rpx;"></image>
					</view>
					<view class="tbc-flex-row" style="width:44rpx;height:44rpx;" @click="toPageUrl('/pages/message/message')">
						<image src="/static/mine/notice.png" style="width:44rpx;height: 44rpx;"></image>
					</view>
				</view>
			</view>
		</view>
		<!-- #endif -->

		<!-- 用户头部 -->
		<view class="tbc-flex-col" style="position:relative;background-color:#e41f19;">
			<view class="tbc-flex-col" style="align-items: center;">
				<!-- #ifdef APP-NVUE || H5 -->
				<view style="height: 60rpx;"></view>
				<!-- #endif -->
				<view style="height: 100rpx;"></view>
				<view class="tbc-flex-row" style="flex-direction: row;width:690rpx;align-items: center;"
					@click="toProfile">
					<view style="height:120rpx;width:120rpx;margin-right: 20rpx;">
						<image style="height:120rpx;width:120rpx;border-radius: 120rpx;" :src="loginUserInfo.avatar">
						</image>
					</view>
					<view class="tbc-flex-col" style="flex-direction: column;">
						<view>
							<text
								style="font-size: 36rpx;font-weight: bold;color:#fff;font-family:PingFang SC;">{{loginUserInfo.nick_name}}</text>
						</view>
						<view style="margin-top:10rpx;" v-if="loginUserInfo.user_id">
							<text style="font-size:28rpx;color: #fff;">{{loginUserInfo.mobile}}</text>
						</view>
					</view>
				</view>
				
				<!-- 统计信息 -->
				<view style="padding-top: 40rpx;">
					<view class="tbc-flex-row" style="flex-direction: row;flex-wrap: wrap;">
						<view class="tbc-flex-col"
							style="flex-direction: column;align-items: center;margin-bottom: 20rpx;width:187.5rpx;"
							v-for="(item, index) in statistics" :key="index" @click="onTabBarClick(item)">
							<text style="font-size: 32rpx;color: #fff;font-weight: bold;">{{item.value}}</text>
							<text style="font-size: 24rpx;margin-top:16rpx;color: #fff;">{{item.label}}</text>
						</view>
					</view>
				</view>
				<!-- 统计信息  结束 -->
				<view style="height: 10rpx;"></view>
			</view>
		</view>
		<!-- 用户头部 结束-->



		<!-- 我的订单 -->
		<view class="tbc-flex-col"
			style="flex-direction: column;align-items: center;position: relative;overflow: hidden;">
			<view
				style="position: absolute;height:100rpx;top:0;width: 750rpx;background-color:#e41f19;border-bottom-left-radius: 15rpx;border-bottom-right-radius: 15rpx;">
			</view>
			<order :tabBarList="tabBarList1" @itemClick="toPageUrl"></order>
		</view>
		<!-- 我的订单 结束 -->
		
		<!-- 我的收益 -->
		<!-- <view class="tbc-flex-col" style="flex-direction: column;align-items: center;margin-top: 20rpx;">
			<profit :tabBarList="tabBarList1"></profit>
		</view> -->
		<!-- 我的收益 结束 -->

		<!-- 常用工具 -->
		<view class="tbc-flex-col" style="flex-direction: column;align-items: center;margin-top: 20rpx;">
			<tools :tabBarList="tabBarList2" @itemClick="toPageUrl"></tools>
		</view>
		<!-- 常用工具 结束 -->
		<view style="height: 40rpx;"></view>
	</view>
</template>

<script>
	import order from './components/order.nvue'
	import tools from './components/tools.nvue'
	import profit from './components/profit.nvue'
	import {
		mapState
	} from 'vuex'

	export default {
		components: {
			order,
			tools,
			profit
		},

		data() {
			return {
				moduleList: [],
				statistics: [{
						label: '账户余额',
						value: 0,
						field: 'balance',
						tabCode: '/pages/wallet/wallet'
					},
					{
						label: '积分',
						value: 0,
						field: 'integral',
						tabCode: '/pages/wallet/integral'
					},
					{
						label: '我的收藏',
						value: 0,
						field: 'collect',
						tabCode: '/pages/mine/collect'
					},
					{
						label: '浏览记录',
						value: 0,
						field: 'browse',
						tabCode: '/pages/mine/browse'
					},
				],
				tabBarList1: [{
						label: '待付款',
						icon: '/static/order/wait_pay.png',
						tabCode: 'waitPay',
						count: 0,
					},
					{
						label: '待发货',
						icon: '/static/order/wait_send.png',
						tabCode: 'waitSend',
						count: 0,
					},
					{
						label: '待收货',
						icon: '/static/order/all.png',
						tabCode: 'waitConfirm',
						count: 0,
					},
					{
						label: '待评论',
						icon: '/static/order/wait_comment.png',
						tabCode: 'waitComment',
						count: 0,
					}
				],
				tabBarList2: [{
						label: '我的地址',
						icon: '',
						tabCode: '/pages/mine/address'
					},
					{
						label: '优惠券',
						icon: '',
						tabCode: '/pages/coupon/mine'
					},
					{
						label: '邀请用户',
						icon: '',
						tabCode: '/pages/mine/invite'
					},
					{
						label: '系统设置',
						icon: '',
						tabCode: '/pages/setting/setting'
					}
				],
				scrollTop: 0
			}
		},
		computed: {
			...mapState(['loginUserInfo']),

			statusBarHeight() {
				return uni.getSystemInfoSync().statusBarHeight
			},

			navScrollRatio() {
				let ratio = this.scrollTop / (uni.upx2px(90) + this.statusBarHeight)
				if (ratio > 1) ratio = 1
				return ratio
			},

			navBackgroundColor: function() {
				return 'background-color:rgba(233,51,35, ' + this.navScrollRatio + ')'
			},

			height() {
				console.log('height: ' + Math.abs(this.scrollTop) + "px")
				return 'height: ' + Math.abs(this.scrollTop) + "px"
			},
		},

		onLoad: function() {},

		onShow: function() {
			this.getStatistics()
			this.getOrderStatistics()
		},

		onPullDownRefresh: function() {
			this.$store.dispatch('getLoginUserInfo')
			this.getStatistics()
			this.getOrderStatistics()
			uni.stopPullDownRefresh()
		},

		onPageScroll: function(e) {
			this.scrollTop = e.scrollTop
		},

		methods: {

			toPageUrl(page) {
				let url = page
				let authList = [
					'/pages/coupon/mine', '/pages/mine/address', "/pages/order/list",
					"/pages/mine/profile", '/pages/mine/collect', '/pages/wallet/wallet',
					'/pages/wallet/integral'
				]
				authList.forEach(item => {
					if (page.indexOf(item) > -1 && !this.loginUserInfo.user_id) {
						url = "/pages/authorize/login"
					}
				})

				let that = this
				uni.navigateTo({
					url,
					fail: function() {
						that.$store.commit('order/setOrderList', [])
						uni.showToast({
							title: '功能未完善',
							icon: 'none'
						})
					}
				})
			},

			toProfile() {
				this.toPageUrl("/pages/mine/profile")
			},

			toOrderList(data) {
				this.toPageUrl("/pages/order/list?tab=" + data.tabCode)
			},

			onTabBarClick(data) {
				this.toPageUrl(data.tabCode)
			},

			// 获取统计信息
			async getStatistics() {
				const res = await uni.$http.get('/user.statistics')
				if (res.data.code !== 0) {
					if (res.data.code === 401) this.statistics.forEach(item => item.value = 0)
					return
				}
				// let info = this.loginUserInfo
				let data = res.data.data
				for (let i in this.loginUserInfo) data[i] = this.loginUserInfo[i]
				this.statistics.forEach(item => {
					if (data[item.field] !== undefined) item.value = data[item.field]
				})
			},

			// 获取订单统计
			async getOrderStatistics() {
				const res = await uni.$http.get('/order.statistics')
				if (res.data.code !== 0) {
					if (res.data.code === 401) this.tabBarList1.forEach(item => item.count = 0)
					return
				}
				// let info = this.loginUserInfo
				let data = res.data.data
				this.tabBarList1.forEach(item => {
					if (data[item.tabCode] !== undefined) item.count = data[item.tabCode]
				})
			}
		}
	}
</script>
