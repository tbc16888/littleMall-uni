<template>
	<view>

		<view class="tbc-flex-col" v-for="(month) in dataList" :key="month.month">
			<view class="tbc-flex-col" style="flex-direction: column;align-items: center;background-color: #F5F5F5;position: sticky;">

				<view class="tbc-flex-row"
					style="flex-direction: row;height: 110rpx;justify-content: center;width: 690rpx;align-items: center;">

					<view
						style="background-color: #FFF;border-radius: 26rpx;height: 52rpx;width: 176rpx;justify-content: center;flex-direction: row;align-items: center;"
						class="tbc-flex-row" @click="showMonthPicker(month.month)">
						<view>
							<text style="color: #333;font-size: 26rpx;">{{month.month}}</text>
						</view>
						<view style="width: 16rpx;height: 12rpx;margin-left: 16rpx;">
							<image src="/static/icon/triangle-down.png" style="width: 16rpx;height: 12rpx;"></image>
						</view>
					</view>
					<view style="flex: 1;"> </view>
	
				</view>
			</view>

			<view class="tbc-flex-col" style="flex-direction: column;background-color: #FFF;align-items: center;">
				<view style="width: 690rpx;" v-for="(item) in month.list" :key="item.log_id">
					<view class="tbc-flex-col" style="padding-top:30rpx;padding-bottom: 30rpx;">
						<view class="tbc-flex-row" style="flex-direction: row;">
							<view style="flex:1">
								<text style="font-size: 34rpx;color: #333;">{{item.change_type_name}}</text>
							</view>
							<text style="font-size: 36rpx;color: #333;font-weight: bold;">{{item.change_amount}}</text>
						</view>
						<view class="tbc-flex-row" style="flex-direction: row;margin-top: 10rpx;">
							<text style="font-size: 28rpx;color: #7F7F7F;">{{item.change_time}}</text>
						</view>
					</view>
					<view style="height: 1px;background-color: #EFEFEF;"></view>
				</view>
			</view>
		</view>

		<none v-if="pageCount > -1 && total === 0"></none>

		<uni-popup type="bottom" ref="monthPopup">
			<month-picker ref="monthPicker" @cancel="$refs.monthPopup.close()" @confirm="onMonthPickerConfirm" :init="initMonth">
			</month-picker>
		</uni-popup>
	</view>
</template>

<script>
	import uniPopup from '@/components/uni-official/uni-popup/uni-popup.vue'
	import monthPicker from './compoennts/month-picker.nvue'
	import none from '@/components/app/None.nvue'
	export default {
		components: {
			uniPopup,
			monthPicker,
			none
		},

		data() {
			return {
				dataList: [],
				formatList: {},
				monthData: {},
				page: 1,
				size: 10,
				pageCount: -1,
				total: -1,
				choiceMonth: '',
				initMonth: ''
			}
		},

		onLoad: function() {
			this.getBillList()
		},

		onPullDownRefresh: function() {
			this.choiceMonth = ''
			this.page = 1
			this.getBillList()
		},

		onReachBottom: function() {
			this.getBillList()
		},

		methods: {
			createItemData(month) {
				return {
					month,
					list: [],
					income: 0,
					expense: 0
				}
			},

			async getBillList() {
				if (this.page > 1 && this.page - 1 >= this.pageCount) return
				const res = await uni.$http.get('/user.integral', {
					page: this.page++,
					size: this.size,
					sort: this.sort,
					keyword: this.keyword,
					month: this.choiceMonth,
				})


				uni.stopPullDownRefresh()
				if (res.data.code !== 0) {
					return uni.showToast({
						title: res.data.message,
						icon: 'none'
					})
				}
				let data = res.data.data
				this.total = data.total
				this.pageCount = Math.ceil(data.total / this.size)
				let dataList = (this.page <= 2) ? [] : this.dataList
				data.group.forEach(item => {
					let index = dataList.findIndex(row => row.month === item.month)
					if (index > -1) {
						dataList[index].list = dataList[index].list.concat(item.list)
					} else {
						dataList.push(item)
					}
				})
				if (!dataList.length && this.choiceMonth) {
					dataList.push(this.createItemData(this.choiceMonth))
				}	
				this.dataList = dataList
			},

			showMonthPicker(month) {
				this.initMonth = month
				this.$refs.monthPopup.open()
				// 微信picker-view 渲染问题
				setTimeout(() => {
					this.$refs.monthPicker.setPickerValue(month)
				}, 200)
			},

			onMonthPickerConfirm(month) {
				this.choiceMonth = month
				this.page = 1
				this.getBillList()
				this.$refs.monthPopup.close()
			}
		}
	}
</script>
